{"componentChunkName":"component---src-templates-post-js","path":"/posts/i-made-a-vscode-plugin","webpackCompilationHash":"2b946507588b7ce652ad","result":{"data":{"markdownRemark":{"html":"<p>I recently found <a href=\"remove.bg\">remove.bg</a>. It is a really cool project that\nallows you to (as the name suggests) remove the background from an image. So I\ndecided to make a plugin for vscode that would allow me to right click an\nimage and remove the background from that image.</p>\n<p>I have been switching back and forth between vscode and vim a lot lately but one\nof the things that intrigued me with vscode was the fact that plugins were\nwritten in JavaScript.</p>\n<p>The main reason why I like JavaScript, and also the entire web stack, is the\nfact that it runs everywhere. Knowledge in JavaScript remain relevant even if\nyou want to write a Sketch plugin, a mobile app, a backend, a CLI or a desktop\napp.</p>\n<p>But enough talking about JavaScript and lets get in to it!</p>\n<h3>Starting Out</h3>\n<p>First of all I needed start a project. To do this I followed the\n<a href=\"https://code.visualstudio.com/api/get-started/your-first-extension\">Official Documentation</a>.\nScaffolding of a new project can be done with <a href=\"https://www.yeoman.io/\">Yeoman</a>.\n<a href=\"https://www.yeoman.io/\">Yeoman</a> is a project that I have looked at before so I\nwas pleasantly surprised that this was the tool that Microsoft decided to use\nfor their scaffolding.</p>\n<p>From here I decided to do some research. I knew that\n<a href=\"https://www.remove.bg/\">remove.bg</a> had an HTTP API that I could use but it got\neven better! There was already an\n<a href=\"https://www.npmjs.com/package/remove.bg\">npm package</a> out there that handled it\nall for me.</p>\n<h3>Running an Extension</h3>\n<p>So once the project was scaffolded I had to figure out how to run it; this was\nby far the easiest step. The whole process was as easy as going to the debug\ntab and press run. A new vscode window opened and in that window my plugin was\nalready installed and ready to use, <strong>NEAT!</strong></p>\n<h3>Wrapping the NPM Package in Visual Studio Code</h3>\n<p>I started out by installing the NPM package. This was no harder than installing\na dependency for a regular node or web project.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> remove.bg</code></pre></div>\n<p>So, for starters, I knew that the API required an API key. So it would be great\nif that API key could be specified in the vscode settings. By adding these lines\nto the <em>package.json</em> file the setting titled <em>Api Key</em> was added to the\nsettings menu in vscode (under the section named <em>Remove-bg</em>):</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"contributes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"configuration\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Remove.bg configuration\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"remove-bg.apiKey\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The API key for remove.bg\"</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The next step was to make the menu appear when you right click a file. This was,\nunfortunately, less well documented but some trial and error lead me to this\nsolution:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"contributes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"menus\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"explorer/context\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"remove-bg.removeBg\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"when\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"resourceExtname =~ /\\\\.png$|\\\\.jpg$|\\\\.jpeg$/\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"navigation\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"commands\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"remove-bg.removeBg\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Remove background\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Okay, there is a lot to take in here so lets just start with the <em>command</em> part.\nThe command part tells vscode that this extension will provide a command\ncalled <em>remove-bg.removeBg</em>; we will come to the part where this command is\nimplemented, so hang tight.</p>\n<p>The next part is the <em>menu</em> part. Here we define that we want to add an item\nto the dropdown menu that is shown when the user rights click something in the\nexplorer tab. We provide a condition that it should only be displayed when the\nuser clicks something with a file extension that matched the regex:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token regex\">/\\.png$|\\.jpg$|\\.jpeg$/</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>So basically any image that is supported by <a href=\"https://www.remove.bg\">remove.bg</a>.\nWe also specify that this menu item should trigger the command that we\nspecified in the <em>command</em> section.</p>\n<h3>Lets Write Some JavaScript!</h3>\n<p>So when I said that vscode plugins are made with JavaScript I wasn't lying - I\ndid however decide to use <a href=\"https://www.typescriptlang.org/\">Typescript</a> for this\nand it is also the language that is generally used to make vscode plugins.</p>\n<p>In the src folder of the scaffolded project there is a file called\n<em>extension.ts</em>. This is the file that will run once your extension is loaded. At\nfirst I knew that I would have to, somehow, grab the API key that the user\nhopefully specified in the settings</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadApiKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> undefined <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> vscode<span class=\"token punctuation\">.</span>workspace<span class=\"token punctuation\">.</span><span class=\"token function\">getConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token string\">'remove-bg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apiKey'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The function above attempts to get the <em>apiKey</em> from the settings; if the\nsetting is not specified it returns undefined.</p>\n<p>Okay so next up I decided that I didn't want to overwrite the file once the\nbackground was removed but instead I wanted to create a new file. I decided to\nadd the suffix <em>-no-bg</em> to the output file and to handle this I added a utility\nfunction. This would allow me to quickly change to some other suffix/extension\nif I wanted to; the function looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">SuffixConfig</span> <span class=\"token punctuation\">{</span>\n  path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  suffix<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  extension<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">addSuffix</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">,</span> suffix<span class=\"token punctuation\">,</span> extension <span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span> SuffixConfig</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> dots <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dots<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>suffix<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>extension<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The wonky part here is the slice between zero and minus one. What this does is\nreturn a new array where the last item in the original array is removed. In\nthis case the thing that comes after the last dot will be removed.</p>\n<p>So now that I had my initial building blocks I was able to stitch together the\nthe pieces using the\n<a href=\"https://code.visualstudio.com/api/get-started/your-first-extension\">Official Documentation</a> and the\n<a href=\"https://www.npmjs.com/package/remove.bg\">npm package</a>.</p>\n<p>This is the final code in the <em>extensions.ts</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// this method is called when your extension is activated</span>\n<span class=\"token comment\">// your extension is activated the very first time the command is executed</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">activate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context<span class=\"token punctuation\">:</span> vscode<span class=\"token punctuation\">.</span>ExtensionContext</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> disposable <span class=\"token operator\">=</span> vscode<span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">registerCommand</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'remove-bg.removeBg'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">uri<span class=\"token punctuation\">:</span> vscode<span class=\"token punctuation\">.</span>Uri</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> apiKey <span class=\"token operator\">=</span> <span class=\"token function\">loadApiKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>apiKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">showErrorMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No API key was set.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">const</span> sourceFile <span class=\"token operator\">=</span> uri<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> outFile <span class=\"token operator\">=</span> <span class=\"token function\">addSuffix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> sourceFile<span class=\"token punctuation\">,</span>\n        suffix<span class=\"token punctuation\">:</span> <span class=\"token string\">'-no-bg'</span><span class=\"token punctuation\">,</span>\n        extension<span class=\"token punctuation\">:</span> <span class=\"token string\">'png'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">await</span> <span class=\"token function\">removeBackgroundFromImageFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          path<span class=\"token punctuation\">:</span> sourceFile<span class=\"token punctuation\">,</span>\n          apiKey<span class=\"token punctuation\">:</span> apiKey<span class=\"token punctuation\">,</span>\n          outputFile<span class=\"token punctuation\">:</span> outFile<span class=\"token punctuation\">,</span>\n          size<span class=\"token punctuation\">:</span> <span class=\"token string\">'regular'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'auto'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">showInformationMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Background remove successfully!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">showErrorMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Failed to remove background.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  context<span class=\"token punctuation\">.</span>subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>disposable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Closing Thoughts</h3>\n<p>The plugin can be found\n<a href=\"https://marketplace.visualstudio.com/items?itemName=antonholmberg.remove-bg\">here</a> and the code for the plugin is available\n<a href=\"https://github.com/antonholmberg/vscode-remove-bg\">here</a> I actually decided to\nwrite an email to the creators of <a href=\"https://www.remove.bg/\">remove.bg</a> to ask\nthem if it was okay for me to use their logo. They were completely fine\nwith this and actually responded very quickly.</p>\n<p>This whole thing was a great learning experience and I regularly come up with\nnew ideas for vscode plugins - if only a day had more hours.</p>\n<p>I know that this article might not have been the most educational things ever\nbut hopefully someone got inspired to make a plugin for a tool that they use\nregularly. A lot of the times somethings as trivial as wrapping a tool that\nsomeone else has made in order to make that tool easier to reach for is enough.</p>\n<p>I would also like to make a shout out to the people working with\n<a href=\"https://www.remove.bg/\">remove.bg</a> for being awesome enough to let me use their\nlogo and for setting aside time replying to some random swedish guy who made a\nvscode plugin.</p>","frontmatter":{"path":"/posts/i-made-a-vscode-plugin","title":"I Made a Visual Studio Code Plugin"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}