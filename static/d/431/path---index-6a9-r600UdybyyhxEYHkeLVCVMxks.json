{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>This blog was made with <a href=\"https://www.gatsbyjs.org/\">Gatsby.js</a> over all it has\nbeen a blast to make it and the fact that I could reuse my react skills maded me\nfeel like i am in controll.</p>\n<p>There were however a quite a lot of things that took some time to sink in. So I\nthough it might be nice for me to post about it.</p>\n<h3>Initial Starter Pack</h3>\n<p>So one of the tings I wish that I hade done differently is was to start out with\nthe hello world starter pack instead of the default one.</p>\n<p>There are a lot of nice things in the default started pack like SEO, Manifest and\nall of that goodness. But before actually understanding how gatsby works, this\ninitial stuff becomes rather confusing.</p>\n<p>Therefore I strongly recommend anyone who wants to learn <a href=\"https://www.gatsbyjs.org/\">Gatsby.js</a>\nto initialize a project with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gatsby new hello-world https://github.com/gatsbyjs/gatsby-starter-hello-world</code></pre></div>\n<h3>What It Actually Does</h3>\n<p>So gatsby is a static page generator. This took some time for me to realize, thinking\nit was more or less like writing any other React app. We need to sort of separate the\n<em>build time</em> from <em>run time</em>. When <a href=\"https://www.gatsbyjs.org/\">Gatsby.js</a> compiles a\nproject it pulls in data from different sources. Examples of sources are:</p>\n<ul>\n<li><a href=\"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/\">Filesystem</a></li>\n<li><a href=\"https://www.gatsbyjs.org/packages/gatsby-source-custom-api/\">Custom API</a></li>\n<li><a href=\"https://www.gatsbyjs.org/packages/@mosch/gatsby-source-github/\">Github</a></li>\n</ul>\n<p>There are many more of these <em>source</em> plugins. I would advice anyone to just start out\nwith the file system one. This is because it makes it is easier create a mental image\nof how <a href=\"https://www.gatsbyjs.org/\">Gatsby.js</a> works. It is easy to understand that these\nlocal files are managed at build time and not at <em>run time</em>. The thing that I didn't\nreally understand at first was that even if the source was an API, <strong>the data was still\nfetched at <em>build time</em></strong>.</p>\n<h3>Pages</h3>\n<p>Okay so lets talk basics here. Pages are the most basic elements in\n<a href=\"https://www.gatsbyjs.org/\">Gatsby.js</a>. When you create an app with the hello world\nstarter pack you will only have one page, the <strong>index.js</strong> page. This page it the one that the\nuser lands on. Another path will be added for each <em>page</em> that you add in the <em>pages</em> folder.</p>\n<p>Let say that I add an about page. <a href=\"https://www.gatsbyjs.org/\">Gatsby.js</a> will add a path for\n<strong>/about</strong>. If you want to link to the page you can add a link on the <em>index</em> page to\n<strong>/about</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Index</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/about\"</span><span class=\"token operator\">></span>About<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>GraphQL</h3>\n<p>So before making this blog I had never really worked with GraphQL on a \"<em>real</em>\" project.\nI had played around with <a href=\"https://github.com/graphql/graphiql\">GraphiQL</a> but that was about\nall I knew.</p>\n<p>As I mentioned Gatsby pulls data from your <em>sources</em> at <em>build time</em>. Once this is done\nit exposes this data though GraphQL. I found that the easiest one to wrap my head around was\nonce again the <a href=\"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/\">filesystem</a>.</p>\n<p>To add the file system plugin I ran:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gatsby-source-filesystem</code></pre></div>\n<p>add added:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Gatsby Default Starter'</span><span class=\"token punctuation\">,</span>\n    description<span class=\"token punctuation\">:</span>\n      <span class=\"token string\">'Kick off your next, great Gatsby project with this default starter. This barebones starter ships with the main Gatsby configuration files you might need.'</span><span class=\"token punctuation\">,</span>\n    author<span class=\"token punctuation\">:</span> <span class=\"token string\">'@gatsbyjs'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-source-filesystem'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'posts'</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/posts`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>So everything I put in the <code class=\"language-text\">posts</code> directory will be sourced by the plugin.</p>\n<p>Once this is sourced I can query for the data with GraphQL. I recommend taht you\nfirst use GraphiQL. If you run Gatsby locally this will be available at\n<a href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a>.</p>\n<p>A query that fetched all the files currently sourced by the\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/\">filesystem</a> plugin\nyou can run:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  allFile <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        name\n        sourceInstanceName\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The response from this is for me, as of writing this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"allFile\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"edges\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dcd6f52b-2293-577f-abc7-d317aa5ebfde\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"how-i-made-this-blog\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"sourceInstanceName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"posts\"</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Transformers</h3>\n<p>So gatsby has a multitude of <em>transformers</em>. What <em>transformers</em> do is to take the\ncontent that the <em>source</em> plugins load and transform them in some way.</p>\n<p>I use <a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-remark/\">remark</a>. It is\na tranformer for markdown (my choise when writing stuff). It takes any markdown available\ntransforms it in to HTML to be displayed in the blog.</p>\n<p>I installed the plugin with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gatsby-transformer-remark</code></pre></div>\n<p>and configured it with:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-transformer-remark'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now when I run this graphql query:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  allMarkdownRemark <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        html\n        frontmatter <span class=\"token punctuation\">{</span>\n          title\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I get this back:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"allMarkdownRemark\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"edges\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"html\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;The html displayed to you right now>\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"frontmatter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"How I Made This Blog\"</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>One of the questions I had when looking at the documentation for the remark plugin\nwas: What id frontmatter? Well frontmatter is specified in the markdown like this</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token hr punctuation\">---</span>\npath: '/posts/how-i-made-this-blog'\ndate: 2019-03-17:13:00.962Z\n<span class=\"token title important\">title: 'How I Made This Blog'\n<span class=\"token punctuation\">---</span></span></code></pre></div>\n<h3>Generating Pages From Sources</h3>\n<p>So now that we can create pages and query data. The next question becomes\nhow do we add a page for each of the posts? This is done by editing the\n<strong>gatsby-node.js</strong> file. In this file you can export a function called <em>createPages</em>.\nThis method will be called by gatsby at <em>build time</em>.</p>\n<p><em>createPages</em> will receive an object with <em>actions</em> and <em>graphql</em> as properties.\nYou can use <em>graphql</em> to query for data and then call <em>actions.createPage</em> to\ncreate a page.</p>\n<p>For me the function looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> actions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> graphql <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> blogPostTemplate <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/templates/Post.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n    {\n      allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n        edges {\n          node {\n            frontmatter {\n              path\n            }\n          }\n        }\n      }\n    }\n  `</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> errors<span class=\"token punctuation\">,</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span>\n        component<span class=\"token punctuation\">:</span> blogPostTemplate<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The above code will query all the markdown files and create one page for each file.\nThe path to the page will be specified in the markdown it self and the page will use the\ncomponent specified in <em>src/templates/Post.js</em> to render the page.</p>","excerpt":"This blog was made with  Gatsby.js  over all it has\nbeen a blast to make it and the fact that I could reuse my react skills maded me\nfeel like i am in controll. There were however a quite a lot of…","frontmatter":{"title":"How I Made This Blog","path":"/posts/how-i-made-this-blog"}}}]}},"pageContext":{}}