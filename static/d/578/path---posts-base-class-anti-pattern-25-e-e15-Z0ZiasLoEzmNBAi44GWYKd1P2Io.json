{"data":{"markdownRemark":{"html":"<p>As a consultant I get to see a lot of code bases and on Android, by far, the most common\nanti-pattern that I see is what I would call the BaseClass anti-pattern.</p>\n<p>In this article I will explain what it is, why it is bad and why it is so seductive.</p>\n<h2>What is it?</h2>\n<p>So what is the BaseClass anti-pattern and how do I detect it?</p>\n<ol>\n<li>Start out by opening the android project.</li>\n<li>Locate a activity or fragment class in said project.</li>\n<li>Does it extend something called <code class=\"language-text\">BaseActivity</code> or <code class=\"language-text\">BaseFragment</code>.</li>\n</ol>\n<p>If the answer #3 is yes then you my friend has falled victim to the BaseClass anti-pattern.\nIf you open the <code class=\"language-text\">BaseActivity</code> or the <code class=\"language-text\">BaseFragment</code> class and that class contains more than\n50 lines of code then you are in deep trouble.</p>","frontmatter":{"date":"Invalid date","path":"/posts/base-class-anti-pattern","title":"The BaseClass Anti-Pattern"}}},"pageContext":{}}